{"data":{"markdownRemark":{"html":"<p>要理解 CKB 上的各种操作，首先要对 CKB 的基本结构有了解。CKB 一共有四种主要的数据结构，分别是 cell, transaction, script 和 block 。</p>\n<h2 id=\"cell\"><a href=\"#cell\" aria-label=\"cell permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cell</h2>\n<p>cell 是 CKB 的基本元素，就跟它名字一致，cell 是 CKB 的细胞。cell 中可以存放数据和脚本。数据可能是某个应用的状态数据也可能是 UDT 也就是用户自定义的 Token 。脚本用来实现 CKB 的各种智能功能。</p>\n<p>一个 cell 的数据结构如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"gatsby-code-text\"><code class=\"gatsby-code-text\">cell {\n  capacity\n  data\n  type\n  lock\n}</code></pre></div>\n<p>下面详细介绍一下：</p>\n<ul>\n<li>capacity 是用来限制 cell 大小的，是以 byte 为单位的整数。</li>\n<li>data 可以用来保存数据和脚本，没错，的确可以保存脚本，而且脚本只能保存到 data 中，不能保存到其他地方。</li>\n<li>type 规定了当前 cell 的类型，说白了就是给 data 中的数据一些限制规则，修改 data 的时候如果违背了这些规则，那么就会修改失败，具体 type 的作用以后咱们通过各种实际例子来看。</li>\n<li>lock 用来定义 cell 的所有人。</li>\n</ul>\n<p>注意，type 和 lock 的数据结构都是 script ，但是有意思的是 script 数据结构中是不直接存储脚本代码的，而是存储指向脚本代码的指针，具体代码应该存到哪呢？咱们刚说过了。</p>\n<h2 id=\"transaction-交易\"><a href=\"#transaction-%E4%BA%A4%E6%98%93\" aria-label=\"transaction 交易 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transaction 交易</h2>\n<p>发起交易的目的是更新 cell 。</p>\n<p>交易的作用可以从两个方面来理解。首先，把 cell 转交给另外一个人，类似于比特币区块链上，你发起一个交易把你的一个币转给我，这个作用跟“交易”这个词的字面意思比较相符。第二，发交易对 CKB 而言，更重要的作用是更新 cell 中的数据和脚本。</p>\n<p>交易发出后，网络会执行交易。每个交易中都包含多个 input cell 和 output cell 。除此之外还包含一些依赖数据，分别保存到 <code class=\"gatsby-code-text\">deps</code> 和 <code class=\"gatsby-code-text\">witness</code> 两项之内。一旦一个 cell 被用作交易的输入了，这个 cell 就死了，而对应的 out 的 cell 就活了。</p>\n<p><img src=\"https://img.haoqicat.com/2019070203.jpg\"></p>\n<p>稍微展开说说交易验证过程。首先要求交易没有凭空生成新的 cell ，也就是要验证 input cell 和 output cell 要的数量要相等（不考虑矿工费）。其次就是交易相关的脚本会被执行到，这是咱们下一部分要讨论的核心问题。</p>\n<h2 id=\"script-脚本\"><a href=\"#script-%E8%84%9A%E6%9C%AC\" aria-label=\"script 脚本 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Script 脚本</h2>\n<p>交易被网络验证的时候，到底会有那些脚本被执行到呢？答案是 input cell 的 lock 脚本以及 output cell 的 type 脚本。</p>\n<p>lock 脚本主要体现所有权。验证过程要保证，发起交易的人是有权力去修改 cell 所有人的，换句话说也就是 lock 脚本要能够成功执行。而要成功的执行 lock ，就要求交易发起人能够提供跟 lock 脚本中的公钥对应的签名。这个签名就存放到前面咱们刚刚提过的 witnesses 这项之内。</p>\n<p>type 脚本的内容也会被执行。具体发挥的作用就比较多样了，这里先不展开。</p>\n<p>这就是对脚本的简单介绍了。</p>\n<h2 id=\"block-区块\"><a href=\"#block-%E5%8C%BA%E5%9D%97\" aria-label=\"block 区块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Block 区块</h2>\n<p>区块由打包到里面的一些交易以及一个包含区块相关数据的区块头文件组成。跟比特币类似，CKB 的区块也需要矿工去进行 POW 运算，去为区块找到一个合适的封条 seal ，有了封条的区块才是可以被网络接收的区块。</p>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-label=\"总结 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>以上就是 CKB 的四种核心的数据结构了。理解他们是理解 CKB 交易如何执行，如何写智能合约和如何定义 UDT 的重要基础。</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://docs.nervos.org/basic-concepts/architecture#scripts\">https://docs.nervos.org/basic-concepts/architecture#scripts</a> </li>\n<li><a href=\"https://docs.nervos.org/dev-guide/scripts\">https://docs.nervos.org/dev-guide/scripts</a></li>\n</ul>","frontmatter":{"title":"CKB 的基本结构","next":null,"prev":null},"fields":{"path":"content/book/zh/arch.md","slug":"book/zh/arch.html"}}},"pageContext":{"slug":"book/zh/arch.html"}}